1)

public class Hello {
    public static void main(String [] args) {
        System.out.println("Hello, my name is Amara Auguste.");
        System.out.println("How are you?");
    }
}

2)
 
public class Arithmetic {
    public static void main(String [] args) {
        int a = 12;
        int b = 10;
        System.out.println("When a is " + a + " and b is " + b);
        System.out.println("The sum of a and b is " + (a + b));
        System.out.println("The difference between a and b is " + (a - b));
        System.out.println("The product of a and b is " + (a * b));
        System.out.println("The quotient of a and b is " + (a / b)); //integer division!
    }
}

3) 

1. Answer: 13
2. First compute: 3 * 4 = 12
   Next: 2 + 12 = 14
   Then: 14 - 5 = 9
   Answer: 9
3. Answer: 16
4. Result: 13
5. ((8 - ((2 * 4) / 2)) + 3) = 7
6. b = 10 + (2 * 3 - 1) = 10 + (6 - 1) = 10 + 5 = 15
   b = 15

4) 

MEMORY:
a = 10
b = 27
c = (10 + 27) = 37
d = (10 - 27) = -17
e = (10 + 27 * 3) = (10 + 81) = 91
f = (27 / 2) = 13 //integer division!
g = (27 % 10) = 7 

OUTPUT:
a is 10, b is 27
a+b is 37
a-b is -17
a+b*3 is 91
b/2 is 13
b%10 is 7

5) 

public class Rectangle {
    public static void main(String [] args) {
        int length = 22;
        int width = 18;
        int area = length * width; //(l * w)
        int perimeter = 2 * (length + width); //2(l + w)
        System.out.println("Rectangle: length = " + length + " and width = " + width);
        System.out.println("Area = " + area);
        System.out.println("Perimeter = " + perimeter);
    }
}

------------------------------------------------------------------------------------------------

REVIEW:

a) It can run on different kinds of computers with few or no modifications.

b) int 123; //invalid (sequence of numbers)
   int $50; //valid (but not conventional)
   int 50dollars; //invalid (starts with a number)
   int abs; //valid
   int hunter; //valid
   int @60cents; //invalid (illegal character AND starts with a number)
   int a_b; //valid
   int #define; //invalid (illegal character)

----------------------------------------------------------------------------------------

6)

public class Division {
    public static void main(String[] args) {
        System.out.println(1 / 2);
        System.out.println(1.0 / 2);
        System.out.println(1 / 2.0);
        System.out.println(1.0 / 2.0);
    }
}

7)

public class TemperatureConverter {
    public static void main(String [] args) {
        double f = 255.5;

        // Convert Fahrenheit to Celsius
        double c = (f - 32) * 5 / 9;

        // Print temperature in Celsius 
        System.out.println(f + " degree(s) Fahrenheit is equal to " + c + " degree(s) Celsius.");
    }
}

8)

public class Circle {
    public static void main(String [] args) {
        double radius = 7.5; //arbitrary radius, value can be changed

        double area = Math.PI * radius * radius; //(πr^2) OR Math.PI * Math.pow(radius,2)

        double circumference = 2 * Math.PI * radius; //(2πr) 

        System.out.println("Radius: " + radius);
        System.out.printf("Area: %.3f\n", area);
        System.out.printf("Circumference: %.3f\n", circumference);
    }
}

9) 4 1 1.000000

10) (Math.pow(x, 2) - (1 / (y + 3))) / ((1 / z) + Math.sqrt(x))

11) If there is a variable x and a variable sqrt that was declared as a double before this line occurs then YES, this is a perfectly legal statement because the class name Math allows Java to distinguish between the variable sqrt and the method sqrt. However, we should avoid having multiple aspects of a program with the same name as it may cause confusion.


12)

public class RandomNumbers {
    public static void main(String [] args) {
        int min = 1;
        int max = 11;
        int rand = (int) (Math.random() * (max - min) + min);//Generate random number
        System.out.println("Random Number: " + rand);//different each run
    }
}


13) Converting from double to int may cause a loss of precision, so you must explicitly apply the cast. However, converting from int to double will never lead to a loss of precision so Java automatically performs the conversion.
