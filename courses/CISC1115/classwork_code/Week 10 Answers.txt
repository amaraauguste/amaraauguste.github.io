REVIEW

a)

import java.util.Scanner;
public class CountVowels {
    public static void main(String [] args) {
        Scanner sc = new Scanner (System.in);
        System.out.print("Enter a String: ");
        String s = sc.nextLine();

        int countVowels = 0;

        for(int i = 0; i < s.length(); i++) {
            char c = s.charAt(i);
            if(c == 'A' || c == 'E' || c == 'I' || c == 'O' || c == 'U' || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {
                countVowels++;
            }
        }

        System.out.println("Number of vowels: " + countVowels);

    }
}


b) 

import java.util.Scanner;
public class IsPalindrome {
    public static void main(String [] args) {
        Scanner sc = new Scanner (System.in);
        System.out.print("Enter a String: ");
        String s = sc.next();

        String revS = "";
        for(int i = s.length()-1; i >= 0; i--) {
            revS += s.charAt(i);
        }

        System.out.println("String reversed: " + revS);

        if(s.equalsIgnoreCase(revS)) {
            System.out.println("This String is a palindrome.");
        } else {
            System.out.println("This String is nota palindrome.");
        }
    }
}


c) 

public static void main(String[] args) throws Exception {
    File file = new File("Week9Emails.txt");
    Scanner scanner = new Scanner(file);

    System.out.println("Unique Domain Names:");

    while (scanner.hasNext()) {
         String first = scanner.next();
         String last = scanner.next();
         String email = scanner.next();
         String domain = email.substring(email.indexOf('@') + 1);
         System.out.println(domain);
    }
    scanner.close();
}


d) first = (name2.compareTo(name1)>0)? name2:name1;

e)

String word, prev;
boolean isdup=false;
n=0;
prev=stdin.next();
word=stdin.next();
while (!word.equals("xxxxx")) {
	if (word.equals(prev))
		isdup=true;
	else {
		if (!isdup) n++;
		isdup=false;
	}
	prev = word;
	word=stdin.next();
}
if (!isdup) n++;


----------------------------------------------------------------------------------------


1) 

1  8  8
-48  8  8

2) 

a. public static int method(int b, int a)

b. c = method(a, b); AND a = method(b, a);

c. 

public static int method(int b, int a) {
    int d;

    d = a * b - b * b;
    return d + b;
}

3) 

public static int biggest(int x, int y, int z) {
    if (x > y && x > z) {
        return x;
    } else if (y > z) {
        return y;
    } 
    return z;
}

4)

public static boolean isDivisible(double n, double m) {
    return (n % m == 0);
}

5) 

/**
 * Checks if the given three sides form a valid triangle.
 * @param side1 the length of the first side of the triangle
 * @param side2 the length of the second side of the triangle
 * @param side3 the length of the third side of the triangle
 * @return true if the sides can form a valid triangle, false otherwise 
 */
public static boolean isTriangle(int side1, int side2, int side3) {
    boolean isPositive = (side1 > 0) && (side2 > 0) && (side3 > 0);
    return (isPositive && (side1 + side2 > side3) && (side1 + side3 > side2) && (side2 + side3 > side1));
}

6) 

true
true
ping!
pong!

7) 

public static double calculateVolumeOfSphere(double radius) {
    return (4.0/3.0) * Math.PI * Math.pow(radius, 3);
}

public static double calculateSurfaceAreaOfSphere(double radius) {
    return 4 * Math.PI * Math.pow(radius, 2);
}

public static boolean isSphereLarge(double radius) {
    return calculateVolumeOfSphere(radius) > 1000;
}

public static void main(String [] args) {
    double radius = 5.0;
    double volume = calculateVolumeOfSphere(radius);
    double surfaceArea = calculateSurfaceAreaOfSphere(radius);
    boolean isLarge = isSphereLarge(radius);

    System.out.println("Volume of the sphere: " + volume + " cubic units");
    System.out.println("Surface area of the sphere: " + surfaceArea + " square units");
    System.out.println("Is the sphere large: " + isLarge);
}
